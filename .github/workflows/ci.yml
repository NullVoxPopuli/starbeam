name: CI
on:
  push:
    branches: [master]
  pull_request:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  preflight:
    name: "Setup"
    runs-on: "ubuntu-latest"
    outputs:
      workspaces: ${{ steps.find-workspaces.outputs.workspaces }}

    steps:
      - uses: actions/checkout@v2
      - name: "Setup node and install dependencies"
        uses: ./.github/actions/setup-node-and-install
        # currently not used - as tests, lints, etc are all top-level commands / projects
        # if we were to make each workspace isolated, we'd first need to copy tsc/eslint/vitest
        # configs into each package -- but that would be slower than what today's setup is.
      - id: find-workspaces
        name: "Find workspaces"
        # generates a list of root-relative paths to each workspace
        #
        # the pipes line-by-line:
        #   Remove version information
        #   Remove the current directory
        #   Remove empty lines
        #   Remove leading slashes
        run: |
          root_of_repo=$(git rev-parse --show-toplevel)
          workspaces=$(pnpm ls -r --depth -1 --long --parseable \
            | cut -f1 -d':' \
            | sed "s~$root_of_repo~~g" \
            | sed '/^[[:space:]]*$/d' \
            | sed 's~^/~~g')
          echo $workspaces
          echo "::set-output name=workspaces::$(echo $workspaces)"

  test:
    name: "Tests"
    runs-on: "ubuntu-latest"
    needs: ['preflight']
    steps:
      - uses: actions/checkout@v2
      - name: "Setup node and install dependencies"
        uses: ./.github/actions/setup-node-and-install
      - run: pnpm test

  typecheck:
    name: "Typecheck"
    runs-on: "ubuntu-latest"
    needs: ['preflight']
    strategy:
      fail-fast: true
      matrix: ${{ fromJson(needs.preflight.outputs.workspaces) }}

    steps:
      - uses: actions/checkout@v2
      - name: "Setup node and install dependencies"
        uses: ./.github/actions/setup-node-and-install
      - name: "Check types"
        run: pnpm tsc --build
        working-directory: ${{matrix}}

  lint:
    name: "Lint"
    runs-on: "ubuntu-latest"
    needs: ['preflight']
    steps:
      - uses: actions/checkout@v2
      - name: "Setup node and install dependencies"
        uses: ./.github/actions/setup-node-and-install
      - run: pnpm lint


  release:
    name: Release
    runs-on: ubuntu-latest
    needs: ['preflight', 'lint', 'typecheck', 'test']
    steps:
      - uses: actions/checkout@v2
      - name: "Setup node and install dependencies"
        uses: ./.github/actions/setup-node-and-install

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        # with:
        #   publish: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
